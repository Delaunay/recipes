"""init

Revision ID: cfe90d19e129
Revises: c50f8c00a74f
Create Date: 2025-06-25 04:33:35.505876

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'cfe90d19e129'
down_revision: Union[str, None] = 'c50f8c00a74f'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('categories',
    sa.Column('_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('extension', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('_id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('ingredients',
    sa.Column('_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('calories', sa.Float(), nullable=True),
    sa.Column('density', sa.Float(), nullable=True),
    sa.Column('extension', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('_id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('users',
    sa.Column('_id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('password_hash', sa.String(length=128), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('_id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('composed',
    sa.Column('_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('images', sa.JSON(), nullable=True),
    sa.Column('prep_time', sa.Integer(), nullable=True),
    sa.Column('cook_time', sa.Integer(), nullable=True),
    sa.Column('servings', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('author_id', sa.Integer(), nullable=True),
    sa.Column('extension', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['author_id'], ['users._id'], ),
    sa.PrimaryKeyConstraint('_id')
    )
    op.create_table('recipes',
    sa.Column('_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('images', sa.JSON(), nullable=True),
    sa.Column('instructions', sa.JSON(), nullable=False),
    sa.Column('prep_time', sa.Integer(), nullable=True),
    sa.Column('cook_time', sa.Integer(), nullable=True),
    sa.Column('servings', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('author_id', sa.Integer(), nullable=True),
    sa.Column('extension', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['author_id'], ['users._id'], ),
    sa.PrimaryKeyConstraint('_id')
    )
    op.create_table('unit_conversions',
    sa.Column('_id', sa.Integer(), nullable=False),
    sa.Column('from_unit', sa.String(length=50), nullable=False),
    sa.Column('to_unit', sa.String(length=50), nullable=False),
    sa.Column('conversion_factor', sa.Float(), nullable=False),
    sa.Column('category', sa.String(length=50), nullable=False),
    sa.Column('ingredient_id', sa.Integer(), nullable=True),
    sa.Column('extension', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['ingredient_id'], ['ingredients._id'], ),
    sa.PrimaryKeyConstraint('_id')
    )
    op.create_table('composed_recipe_recipes',
    sa.Column('composed_recipe_id', sa.Integer(), nullable=True),
    sa.Column('recipe_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['composed_recipe_id'], ['composed._id'], ),
    sa.ForeignKeyConstraint(['recipe_id'], ['recipes._id'], )
    )
    op.create_table('recipe_categories',
    sa.Column('recipe_id', sa.Integer(), nullable=True),
    sa.Column('category_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['categories._id'], ),
    sa.ForeignKeyConstraint(['recipe_id'], ['recipes._id'], )
    )
    op.create_table('recipe_ingredients',
    sa.Column('_id', sa.Integer(), nullable=False),
    sa.Column('recipe_id', sa.Integer(), nullable=False),
    sa.Column('ingredient_id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Float(), nullable=False),
    sa.Column('unit', sa.String(length=50), nullable=False),
    sa.ForeignKeyConstraint(['ingredient_id'], ['ingredients._id'], ),
    sa.ForeignKeyConstraint(['recipe_id'], ['recipes._id'], ),
    sa.PrimaryKeyConstraint('_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('recipe_ingredients')
    op.drop_table('recipe_categories')
    op.drop_table('composed_recipe_recipes')
    op.drop_table('unit_conversions')
    op.drop_table('recipes')
    op.drop_table('composed')
    op.drop_table('users')
    op.drop_table('ingredients')
    op.drop_table('categories')
    # ### end Alembic commands ###
